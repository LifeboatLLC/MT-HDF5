cmake_minimum_required(VERSION 3.12)
project(HDF5_VOL_BYPASS VERSION 0.0.1 LANGUAGES C)

if(NOT HDF5_VOL_BYPASS_INSTALL_BIN_DIR)
  set(HDF5_VOL_BYPASS_INSTALL_BIN_DIR ${CMAKE_INSTALL_PREFIX}/bin)
endif()
if(NOT HDF5_VOL_BYPASS_INSTALL_LIB_DIR)
  set(HDF5_VOL_BYPASS_INSTALL_LIB_DIR ${CMAKE_INSTALL_PREFIX}/lib)
endif()
if(NOT HDF5_VOL_BYPASS_INSTALL_INCLUDE_DIR)
  set(HDF5_VOL_BYPASS_INSTALL_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
endif()
if(NOT HDF5_VOL_BYPASS_INSTALL_DATA_DIR)
  set(HDF5_VOL_BYPASS_INSTALL_DATA_DIR ${CMAKE_INSTALL_PREFIX}/share)
endif()

set(HDF5_VOL_BYPASS_HEADERS
  ${CMAKE_CURRENT_SOURCE_DIR}/H5VLbypass.h
)

set(HDF5_VOL_BYPASS_SRCS
    ${CMAKE_CURRENT_SOURCE_DIR}/H5VLbypass.c)

find_package(HDF5)
if (NOT HDF5_FOUND)
  message (FATAL_ERROR "HDF5 was not found on the system")
endif ()

add_library(h5bypass_vol SHARED ${HDF5_VOL_BYPASS_SRCS})
target_include_directories(h5bypass_vol 
  PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}
  PUBLIC "${HDF5_INCLUDE_DIRS}"
)

target_link_libraries(h5bypass_vol PRIVATE "${HDF5_LIBRARIES}")

add_subdirectory(test)

install(
  FILES
    ${HDF5_VOL_BYPASS_HEADERS}
  DESTINATION
    ${HDF5_VOL_BYPASS_INSTALL_INCLUDE_DIR}
  COMPONENT
    headers
)

install(
  TARGETS
    h5bypass_vol
  EXPORT
    ${HDF5_VOL_BYPASS_EXPORTED_TARGETS}
  LIBRARY DESTINATION ${HDF5_VOL_BYPASS_INSTALL_LIB_DIR}
  ARCHIVE DESTINATION ${HDF5_VOL_BYPASS_INSTALL_LIB_DIR}
)
